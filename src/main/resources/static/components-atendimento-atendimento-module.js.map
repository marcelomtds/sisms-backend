{"version":3,"sources":["./src/app/components/atendimento/form/atendimento-form.component.html","./src/app/components/atendimento/list/atendimento-list.component.html","./src/app/components/atendimento/atendimento-routing.module.ts","./src/app/components/atendimento/atendimento.module.ts","./src/app/components/atendimento/form/atendimento-form.component.ts","./src/app/components/atendimento/list/atendimento-list.component.ts","./src/app/components/atendimento/resolver/atendimento-form.resolver.ts","./src/app/components/atendimento/resolver/atendimento-list.resolver.ts","./src/app/core/model/model/categoria-atendimento-routing.model.ts"],"names":[],"mappings":"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","file":"components-atendimento-atendimento-module.js","sourcesContent":["export default \"<section class=\\\"content-header\\\">\\r\\n  <h1>{{ form.controls.id.value ? 'Editar' : 'Cadastar' }} Atendimento de {{ categoriaAtendimentoRouting?.descricao }}\\r\\n  </h1>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n  <form [formGroup]=\\\"form\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n        <div class=\\\"box box-primary\\\">\\r\\n          <div class=\\\"box-header with-border\\\">\\r\\n            <h3 class=\\\"box-title\\\">Dados do Atendimento</h3>\\r\\n          </div>\\r\\n          <div class=\\\"box-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-lg-3 col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"tipoAtendimento\\\">Tipo de Atendimento</label>\\r\\n                  <ng-select id=\\\"tipoAtendimento\\\" [disabled]=\\\"form.controls.id.value\\\" maxlength=\\\"50\\\"\\r\\n                    [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"tipoAtendimentoId\\\" [clearable]=\\\"false\\\"\\r\\n                    [items]=\\\"tiposAtendimento\\\" bindLabel=\\\"descricao\\\" bindValue=\\\"id\\\"\\r\\n                    (change)=\\\"onChangeTipoAtendimento()\\\">\\r\\n                  </ng-select>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-xs-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"paciente\\\">Paciente</label>\\r\\n                  <ng-select id=\\\"paciente\\\" maxlength=\\\"50\\\" (change)=\\\"onChangePaciente()\\\" formControlName=\\\"pacienteId\\\"\\r\\n                    [items]=\\\"pacientes\\\" bindLabel=\\\"nomeCompleto\\\" placeholder=\\\"Selecione\\\" bindValue=\\\"id\\\">\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\">\\r\\n                      {{ item.nomeCompleto }}\\r\\n                      <br />\\r\\n                      <small>CPF: {{ item.cpf | cpf }}</small>\\r\\n                    </ng-template>\\r\\n                  </ng-select>\\r\\n                  <app-message-required [isInvalidForm]=\\\"isInvalidForm ||isInvalidFormPacienteId\\\"\\r\\n                    [controlComponent]=\\\"form.get('pacienteId')\\\">\\r\\n                  </app-message-required>\\r\\n                </div>\\r\\n              </div>\\r\\n              <ng-container *ngIf=\\\"form.controls.pacienteId.value || form.controls.id.value\\\">\\r\\n                <div class=\\\"col-xs-12 col-sm-3 col-md-3 col-lg-3\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"numeroSessao\\\">Número da Sessão</label>\\r\\n                    <input [value]=\\\"quantidadeSessao\\\" id=\\\"numeroSessao\\\" readonly type=\\\"text\\\" class=\\\"form-control\\\" />\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-xs-12 col-sm-3 col-md-3 col-lg-3\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"aberto\\\">Cadastrar o Pós-atendimento?</label>\\r\\n                    <ng-select id=\\\"aberto\\\" maxlength=\\\"50\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\r\\n                      [(ngModel)]=\\\"isCadastrarPosAtendimento\\\" [clearable]=\\\"false\\\"\\r\\n                      [disabled]=\\\"form.controls.id.value && form.controls.aberto.value === false\\\">\\r\\n                      <ng-option [value]=true>Sim</ng-option>\\r\\n                      <ng-option [value]=false>Não</ng-option>\\r\\n                    </ng-select>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </ng-container>\\r\\n            </div>\\r\\n            <ng-container\\r\\n              *ngIf=\\\"(isFisioterapia() || isDrenagem()) && (form.controls.pacienteId.value || form.controls.id.value)\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"conduta\\\">Conduta</label>\\r\\n                    <textarea trim=\\\"blur\\\" style=\\\"resize: none\\\" id=\\\"conduta\\\" maxlength=\\\"1000\\\" type=\\\"text\\\" rows=\\\"5\\\"\\r\\n                      formControlName=\\\"conduta\\\" class=\\\"form-control\\\"></textarea>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          </div>\\r\\n        </div>\\r\\n        <app-dados-pacote *ngIf=\\\"showDadosPacote()\\\"\\r\\n          [pacote]=\\\"pacote\\\"\\r\\n          [showButtonCreatePackage]=\\\"!form.controls.id.value && form.controls.pacienteId.value && checkTipoAtendimentoPacote()\\\"\\r\\n          (onOpenModalCriarPacote)=\\\"onOpenModalCriarPacote($event)\\\">\\r\\n        </app-dados-pacote>\\r\\n        <ng-container *ngIf=\\\"form.controls.pacienteId.value || form.controls.id.value\\\">\\r\\n          <div class=\\\"box box-primary\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n              <h3 class=\\\"box-title\\\">Dados do Pré-Atendimento</h3>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xs-12 col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"preAtendimentoData\\\">Data e Hora</label>\\r\\n                    <input id=\\\"preAtendimentoData\\\" (focus)=\\\"setDataHoraAtual('preAtendimentoData')\\\" type=\\\"text\\\"\\r\\n                      [validation]=\\\"false\\\" mask=\\\"00/00/0000 00:00\\\" formControlName=\\\"preAtendimentoData\\\"\\r\\n                      class=\\\"form-control\\\" />\\r\\n                    <app-message-required [isInvalidForm]=\\\"isInvalidForm\\\"\\r\\n                      [controlComponent]=\\\"form.get('preAtendimentoData')\\\">\\r\\n                    </app-message-required>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <ng-container *ngIf=\\\"isDrenagem() || isFisioterapia()\\\">\\r\\n                  <div class=\\\"col-xs-12 col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"preAtendimentoPressaoArterial\\\">Pressão Arterial</label>\\r\\n                      <input [dropSpecialCharacters]=\\\"false\\\" [validation]=\\\"false\\\" mask=\\\"000/000\\\"\\r\\n                        id=\\\"preAtendimentoPressaoArterial\\\" maxlength=\\\"7\\\" type=\\\"text\\\"\\r\\n                        formControlName=\\\"preAtendimentoPressaoArterial\\\" class=\\\"form-control\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container *ngIf=\\\"isDrenagem()\\\">\\r\\n                  <div class=\\\"col-xs-12 col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"preAtendimentoPeso\\\">Peso (kg)</label>\\r\\n                      <input currencyMask\\r\\n                        [options]=\\\"{ align: 'left', suffix: '', prefix: '', precision: 1, thousands: ',', decimal: '.', allowNegative: 'false' }\\\"\\r\\n                        id=\\\"preAtendimentoPeso\\\" maxlength=\\\"5\\\" type=\\\"text\\\" formControlName=\\\"preAtendimentoPeso\\\"\\r\\n                        class=\\\"form-control\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-xs-12 col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"preAtendimentoSupraUmbilical\\\">Supra Umbilical (cm)</label>\\r\\n                      <input currencyMask\\r\\n                        [options]=\\\"{ align: 'left', suffix: '', prefix: '', precision: 1, thousands: '.', decimal: ',', allowNegative: 'false' }\\\"\\r\\n                        maxlength=\\\"5\\\" id=\\\"preAtendimentoSupraUmbilical\\\" type=\\\"text\\\"\\r\\n                        formControlName=\\\"preAtendimentoSupraUmbilical\\\" class=\\\"form-control\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-xs-12 col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"preAtendimentoLinhaUmbilical\\\">Linha Umbilical (cm)</label>\\r\\n                      <input currencyMask\\r\\n                        [options]=\\\"{ align: 'left', suffix: '', prefix: '', precision: 1, thousands: '.', decimal: ',', allowNegative: 'false' }\\\"\\r\\n                        id=\\\"preAtendimentoLinhaUmbilical\\\" maxlength=\\\"5\\\" type=\\\"text\\\"\\r\\n                        formControlName=\\\"preAtendimentoLinhaUmbilical\\\" class=\\\"form-control\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-xs-12 col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"preAtendimentoInfraUmbilical\\\">Infra Umbilical (cm)</label>\\r\\n                      <input currencyMask\\r\\n                        [options]=\\\"{ align: 'left', suffix: '', prefix: '', precision: 1, thousands: '.', decimal: ',', allowNegative: 'false' }\\\"\\r\\n                        id=\\\"preAtendimentoInfraUmbilical\\\" maxlength=\\\"5\\\" type=\\\"text\\\"\\r\\n                        formControlName=\\\"preAtendimentoInfraUmbilical\\\" class=\\\"form-control\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n\\r\\n              <ng-container *ngIf=\\\"isDrenagem()\\\">\\r\\n                <div>\\r\\n                  <legend class=\\\"legend-default\\\">Outras Medidas</legend>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-xs-12 col-sm-3 col-md-3 col-lg-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <button title=\\\"Adicionar Medida\\\" (click)=\\\"onClickAdicionarMedida()\\\"\\r\\n                        class=\\\"btn btn-primary\\\"><span><em class=\\\"fa fa-plus\\\"></em>&nbsp;Adicionar Medida</span></button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-xs-12 col-sm-3 col-md-3 col-lg-3\\\"\\r\\n                    *ngFor=\\\"let medida of outrasMedidasSelecionadas; let i = index\\\">\\r\\n                    <div class=\\\"form-group\\\" style=\\\"text-align: end;\\\">\\r\\n                      <button title=\\\"Remover Medida\\\" class=\\\"btn btn-danger\\\" type=\\\"button\\\"\\r\\n                        (click)=\\\"onClickRemoverOutraMedida(medida.index)\\\"><em class=\\\"fa fa-close\\\"></em></button>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"descricaOutraMedidaPre{{ i }}\\\">Medida</label>\\r\\n                      <ng-select id=\\\"descricaOutraMedidaPre{{ i }}\\\" maxlength=\\\"50\\\" [items]=\\\"outrasMedidas\\\"\\r\\n                        [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"medida.outraMedidaId\\\" [multiple]=\\\"false\\\"\\r\\n                        bindLabel=\\\"descricao\\\" required #descricaoOutraMedidaPre=\\\"ngModel\\\" bindValue=\\\"id\\\"\\r\\n                        placeholder=\\\"Selecione\\\">\\r\\n                      </ng-select>\\r\\n                      <app-message-required [isInvalidForm]=\\\"isInvalidForm\\\"\\r\\n                        [controlComponent]=\\\"descricaoOutraMedidaPre\\\">\\r\\n                      </app-message-required>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"valorOutraMedidaPre{{ i }}\\\">Valor (cm)</label>\\r\\n                      <input id=\\\"valorOutraMedidaPre{{ i }}\\\" currencyMask\\r\\n                        [options]=\\\"{ align: 'left', suffix: '', prefix: '', precision: 1, thousands: '.', decimal: ',', allowNegative: 'false' }\\\"\\r\\n                        maxlength=\\\"5\\\" type=\\\"text\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"medida.valorPre\\\"\\r\\n                        class=\\\"form-control\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </ng-container>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"preAtendimentoObservacao\\\">Observacão</label>\\r\\n                    <textarea trim=\\\"blur\\\" style=\\\"resize: none\\\" id=\\\"preAtendimentoObservacao\\\" maxlength=\\\"1000\\\"\\r\\n                      type=\\\"text\\\" rows=\\\"5\\\" formControlName=\\\"preAtendimentoObservacao\\\" class=\\\"form-control\\\"></textarea>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"isCadastrarPosAtendimento\\\" class=\\\"box box-primary\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n              <h3 class=\\\"box-title\\\">Dados do Pós-Atendimento</h3>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xs-12 col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"posAtendimentoData\\\">Data e Hora</label>\\r\\n                    <input id=\\\"posAtendimentoData\\\" (focus)=\\\"setDataHoraAtual('posAtendimentoData')\\\" type=\\\"text\\\"\\r\\n                      [validation]=\\\"false\\\" mask=\\\"00/00/0000 00:00\\\" formControlName=\\\"posAtendimentoData\\\"\\r\\n                      class=\\\"form-control\\\" />\\r\\n                    <app-message-required [isInvalidForm]=\\\"isInvalidForm\\\"\\r\\n                      [controlComponent]=\\\"form.get('posAtendimentoData')\\\">\\r\\n                    </app-message-required>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <ng-container *ngIf=\\\"isDrenagem() || isFisioterapia()\\\">\\r\\n                  <div class=\\\"col-xs-12 col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"posAtendimentoPressaoArterial\\\">Pressão Arterial</label>\\r\\n                      <input [dropSpecialCharacters]=\\\"false\\\" [validation]=\\\"false\\\" mask=\\\"000/000\\\"\\r\\n                        id=\\\"posAtendimentoPressaoArterial\\\" maxlength=\\\"7\\\" type=\\\"text\\\"\\r\\n                        formControlName=\\\"posAtendimentoPressaoArterial\\\" class=\\\"form-control\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n                <ng-container *ngIf=\\\"isDrenagem()\\\">\\r\\n                  <div class=\\\"col-xs-12 col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"posAtendimentoPeso\\\">Peso (kg)</label>\\r\\n                      <input currencyMask\\r\\n                        [options]=\\\"{ align: 'left', suffix: '', prefix: '', precision: 1, thousands: ',', decimal: '.', allowNegative: 'false' }\\\"\\r\\n                        id=\\\"pesoPreAtendimento\\\" maxlength=\\\"5\\\" id=\\\"posAtendimentoPeso\\\" type=\\\"text\\\"\\r\\n                        formControlName=\\\"posAtendimentoPeso\\\" class=\\\"form-control\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-xs-12 col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"posAtendimentoSupraUmbilical\\\">Supra Umbilical (cm)</label>\\r\\n                      <input id=\\\"posAtendimentoSupraUmbilical\\\" currencyMask\\r\\n                        [options]=\\\"{ align: 'left', suffix: '', prefix: '', precision: 1, thousands: '.', decimal: ',', allowNegative: 'false' }\\\"\\r\\n                        maxlength=\\\"5\\\" type=\\\"text\\\" formControlName=\\\"posAtendimentoSupraUmbilical\\\" class=\\\"form-control\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-xs-12 col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"posAtendimentoLinhaUmbilical\\\">Linha Umbilical (cm)</label>\\r\\n                      <input id=\\\"posAtendimentoLinhaUmbilical\\\" currencyMask\\r\\n                        [options]=\\\"{ align: 'left', suffix: '', prefix: '', precision: 1, thousands: '.', decimal: ',', allowNegative: 'false' }\\\"\\r\\n                        maxlength=\\\"5\\\" type=\\\"text\\\" formControlName=\\\"posAtendimentoLinhaUmbilical\\\" class=\\\"form-control\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-xs-12 col-sm-2 col-md-2 col-lg-2\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"posAtendimentoInfraUmbilical\\\">Infra Umbilical (cm)</label>\\r\\n                      <input id=\\\"posAtendimentoInfraUmbilical\\\" currencyMask\\r\\n                        [options]=\\\"{ align: 'left', suffix: '', prefix: '', precision: 1, thousands: '.', decimal: ',', allowNegative: 'false' }\\\"\\r\\n                        maxlength=\\\"5\\\" type=\\\"text\\\" formControlName=\\\"posAtendimentoInfraUmbilical\\\" class=\\\"form-control\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n              <ng-container *ngIf=\\\"isDrenagem()\\\">\\r\\n                <div>\\r\\n                  <legend class=\\\"legend-default\\\">Outras Medidas</legend>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-xs-12 col-sm-3 col-md-3 col-lg-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <button title=\\\"Adicionar Medida\\\" (click)=\\\"onClickAdicionarMedida()\\\"\\r\\n                        class=\\\"btn btn-primary\\\"><span><em class=\\\"fa fa-plus\\\"></em>&nbsp;Adicionar Medida</span></button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-xs-12 col-sm-3 col-md-3 col-lg-3\\\"\\r\\n                    *ngFor=\\\"let medida of outrasMedidasSelecionadas; let i = index\\\">\\r\\n                    <div class=\\\"form-group\\\" style=\\\"text-align: end;\\\">\\r\\n                      <button title=\\\"Remover Medida\\\" class=\\\"btn btn-danger\\\" type=\\\"button\\\"\\r\\n                        (click)=\\\"onClickRemoverOutraMedida(medida.index)\\\"><em class=\\\"fa fa-close\\\"></em></button>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"descricaOutraMedidaPos{{ i }}\\\">Medida</label>\\r\\n                      <ng-select id=\\\"descricaOutraMedidaPos{{ i }}\\\" maxlength=\\\"50\\\" [items]=\\\"outrasMedidas\\\"\\r\\n                        [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"medida.outraMedidaId\\\" [multiple]=\\\"false\\\"\\r\\n                        bindLabel=\\\"descricao\\\" bindValue=\\\"id\\\" placeholder=\\\"Selecione\\\" required\\r\\n                        #descricaoOutraMedidaPos=\\\"ngModel\\\">\\r\\n                      </ng-select>\\r\\n                      <app-message-required [isInvalidForm]=\\\"isInvalidForm\\\"\\r\\n                        [controlComponent]=\\\"descricaoOutraMedidaPos\\\">\\r\\n                      </app-message-required>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"valorOutraMedidaPos{{ i }}\\\">Valor (cm)</label>\\r\\n                      <input id=\\\"valorOutraMedidaPos{{ i }}\\\" currencyMask\\r\\n                        [options]=\\\"{ align: 'left', suffix: '', prefix: '', precision: 1, thousands: '.', decimal: ',', allowNegative: 'false' }\\\"\\r\\n                        maxlength=\\\"5\\\" type=\\\"text\\\" [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"medida.valorPos \\\"\\r\\n                        class=\\\"form-control\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </ng-container>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"posAtendimentoObservacao\\\">Observacão</label>\\r\\n                    <textarea trim=\\\"blur\\\" style=\\\"resize: none\\\" id=\\\"posAtendimentoObservacao\\\" maxlength=\\\"700\\\" type=\\\"text\\\"\\r\\n                      rows=\\\"5\\\" formControlName=\\\"posAtendimentoObservacao\\\" class=\\\"form-control\\\"></textarea>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"isNotMassagem\\\" class=\\\"box box-primary\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n              <h3 class=\\\"box-title\\\">Imagens</h3>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xs-12 col-sm-5 col-md-5 col-lg-5\\\">\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"fileUpload btn btn-primary\\\">\\r\\n                      <span><em class=\\\"fa fa-plus\\\"></em>&nbsp;Adicionar Imagens</span>\\r\\n                      <input title=\\\"Adicionar Imagens\\\" #inputImage id=\\\"imagem\\\" type=\\\"file\\\" multiple class=\\\"upload\\\"\\r\\n                        (change)=\\\"onChangeImage($event.target.files)\\\" (click)=\\\"inputImage.value=null\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div>\\r\\n                <legend *ngIf=\\\"form.controls.imagens.value?.length\\\" class=\\\"legend-default\\\"></legend>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xs-12 col-sm-3 col-md-3 col-lg-3\\\"\\r\\n                  *ngFor=\\\"let imagem of form.controls.imagens.value; let i = index\\\">\\r\\n                  <div class=\\\"form-group\\\" style=\\\"text-align: end;\\\">\\r\\n                    <button title=\\\"Baixar Imagem\\\" (click)=\\\"onClickDownloadFile(imagem.index)\\\"\\r\\n                      class=\\\"btn btn-primary\\\"><em class=\\\"fa fa-cloud-download\\\"></em></button>\\r\\n                    <button style=\\\"margin-left: 5px;\\\" title=\\\"Remover Imagem\\\" class=\\\"btn btn-danger\\\" type=\\\"button\\\"\\r\\n                      (click)=\\\"onClickRemoverImagem(imagem.index)\\\"><em class=\\\"fa fa-close\\\"></em></button>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <img alt=\\\"Imagem\\\" [src]=\\\"imagem.imagem\\\" id=\\\"image{{ i }}\\\" width=\\\"100%\\\" height=\\\"100%\\\">\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"observacaoImagem{{ i }}\\\">Observacão</label>\\r\\n                    <textarea trim=\\\"blur\\\" style=\\\"resize: none;\\\" id=\\\"observacaoImagem{{ i }}\\\"\\r\\n                      [(ngModel)]=\\\"imagem.observacao\\\" [ngModelOptions]=\\\"{standalone: true}\\\" id=\\\"observacaoImagem\\\"\\r\\n                      maxlength=\\\"200\\\" type=\\\"text\\\" rows=\\\"4\\\" class=\\\"form-control\\\"></textarea>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"box box-primary\\\">\\r\\n            <div class=\\\"box-footer\\\">\\r\\n              <button class=\\\"btn btn-primary pull-right\\\" style=\\\"margin-left: 15px;\\\" (click)=\\\"onClickFormSubmit()\\\"><em\\r\\n                  class=\\\"fa fa-save\\\"></em>&nbsp;Salvar</button>\\r\\n              <button class=\\\"btn btn-danger pull-right\\\" (click)=\\\"onClickCancelar()\\\"><em\\r\\n                  class=\\\"fa fa-ban\\\"></em>&nbsp;Cancelar</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </ng-container>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</section>\"","export default \"<section class=\\\"content-header\\\">\\r\\n  <h1>Buscar Atendimentos de {{ categoriaAtendimentoRouting.descricao }}</h1>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n  <form [formGroup]=\\\"form\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n        <div class=\\\"box box-primary\\\">\\r\\n          <div class=\\\"box-header with-border\\\">\\r\\n            <h3 class=\\\"box-title\\\">Filtros</h3>\\r\\n          </div>\\r\\n          <div class=\\\"box-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-lg-3 col-md-3 col-sm-3 col-xs-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"tipoAtendimento\\\">Tipo de Atendimento</label>\\r\\n                  <ng-select id=\\\"tipoAtendimento\\\" maxlength=\\\"50\\\" formControlName=\\\"tipoAtendimentoId\\\"\\r\\n                    [items]=\\\"tiposAtendimento\\\" bindLabel=\\\"descricao\\\" bindValue=\\\"id\\\">\\r\\n                  </ng-select>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-12 col-sm-3 col-md-3 col-lg-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"preAtendimentoData\\\">Data e Hora do Pré-atendimento</label>\\r\\n                  <input id=\\\"preAtendimentoData\\\" [validation]=\\\"false\\\" type=\\\"text\\\" mask=\\\"00/00/0000 00:00\\\"\\r\\n                    formControlName=\\\"preAtendimentoData\\\" class=\\\"form-control\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-12 col-sm-3 col-md-3 col-lg-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"posAtendimentoData\\\">Data e Hora do Pós-atendimento</label>\\r\\n                  <input id=\\\"posAtendimentoData\\\" [validation]=\\\"false\\\" type=\\\"text\\\" mask=\\\"00/00/0000 00:00\\\"\\r\\n                    formControlName=\\\"posAtendimentoData\\\" class=\\\"form-control\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-xs-12 col-sm-3 col-md-3 col-lg-3\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"aberto\\\">Status do Atendimento</label>\\r\\n                  <ng-select id=\\\"aberto\\\" maxlength=\\\"50\\\" formControlName=\\\"aberto\\\">\\r\\n                    <ng-option [value]=true>Em Aberto</ng-option>\\r\\n                    <ng-option [value]=false>Encerrado</ng-option>\\r\\n                  </ng-select>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-xs-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"paciente\\\">Paciente</label>\\r\\n                  <ng-select id=\\\"paciente\\\" maxlength=\\\"50\\\" formControlName=\\\"pacienteId\\\" [items]=\\\"pacientes\\\"\\r\\n                    bindLabel=\\\"nomeCompleto\\\" bindValue=\\\"id\\\">\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\">\\r\\n                      {{ item.nomeCompleto }}\\r\\n                      <br />\\r\\n                      <small>CPF: {{ item.cpf | cpf }}</small>\\r\\n                    </ng-template>\\r\\n                  </ng-select>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"authGuardService.isPermitido(permissaoAdministrador)\\\"\\r\\n                class=\\\"col-lg-4 col-md-4 col-sm-4 col-xs-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"usuario\\\">Usuário</label>\\r\\n                  <ng-select id=\\\"usuario\\\" maxlength=\\\"50\\\" formControlName=\\\"usuarioId\\\" [items]=\\\"usuarios\\\"\\r\\n                    bindLabel=\\\"nomeCompleto\\\" bindValue=\\\"id\\\">\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\">\\r\\n                      {{ item.nomeCompleto }}\\r\\n                      <br />\\r\\n                      <small>CPF: {{ item.cpf | cpf }}</small>\\r\\n                    </ng-template>\\r\\n                  </ng-select>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"box-footer\\\">\\r\\n            <button (click)=\\\"onClickFormSubmit()\\\" class=\\\"btn btn-primary pull-right\\\" style=\\\"margin-left: 15px;\\\"><em\\r\\n                class=\\\"fa fa-search\\\"></em>&nbsp;Buscar</button>\\r\\n            <button class=\\\"btn btn-warning pull-right\\\" (click)=\\\"onClickLimparCampos()\\\"><em\\r\\n                class=\\\"fa fa-eraser\\\"></em>&nbsp;Limpar</button>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"dados?.content?.length > 0\\\" class=\\\"col-md-12\\\" style=\\\"padding: 0px\\\">\\r\\n          <div class=\\\"box box-primary\\\">\\r\\n            <div class=\\\"box-header with-border\\\">\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                  <h3 class=\\\"box-title\\\">Atendimentos</h3>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"box-body\\\">\\r\\n              <div class=\\\"table-roll\\\">\\r\\n                <table id=\\\"example2\\\" class=\\\"table table-bordered table-hover\\\">\\r\\n                  <thead>\\r\\n                    <tr>\\r\\n                      <th>Opções</th>\\r\\n                      <th style=\\\"cursor: pointer\\\" (click)=\\\"onClickOrderBy('pacote.valor')\\\"><em\\r\\n                          [class]=\\\"getIconOrderBy('pacote.valor')\\\"></em>&nbsp;Valor do Pacote</th>\\r\\n                      <th>Total Pago</th>\\r\\n                      <th>Total à Pagar</th>\\r\\n                      <th style=\\\"cursor: pointer\\\" (click)=\\\"onClickOrderBy('aberto')\\\"><em\\r\\n                          [class]=\\\"getIconOrderBy('aberto')\\\"></em>&nbsp;Status</th>\\r\\n                      <th style=\\\"cursor: pointer\\\" (click)=\\\"onClickOrderBy('paciente.nomeCompleto')\\\"><em\\r\\n                          [class]=\\\"getIconOrderBy('paciente.nomeCompleto')\\\"></em>&nbsp;Paciente</th>\\r\\n                      <th style=\\\"cursor: pointer\\\" (click)=\\\"onClickOrderBy('usuario.nomeCompleto')\\\"><em\\r\\n                          [class]=\\\"getIconOrderBy('usuario.nomeCompleto')\\\"></em>&nbsp;Usuário</th>\\r\\n                      <th style=\\\"cursor: pointer\\\" (click)=\\\"onClickOrderBy('preAtendimento.data')\\\"><em\\r\\n                          [class]=\\\"getIconOrderBy('preAtendimento.data')\\\"></em>&nbsp;Data e Hora do Pré-atendimento</th>\\r\\n                      <th style=\\\"cursor: pointer\\\" (click)=\\\"onClickOrderBy('posAtendimento.data')\\\"><em\\r\\n                          [class]=\\\"getIconOrderBy('posAtendimento.data')\\\"></em>&nbsp;Data e Hora do Pós-atendimento</th>\\r\\n                      <th>Tempo de Atendimento</th>\\r\\n                      <th style=\\\"cursor: pointer\\\" (click)=\\\"onClickOrderBy('tipoAtendimento.descricao')\\\"><em\\r\\n                          [class]=\\\"getIconOrderBy('tipoAtendimento.descricao')\\\"></em>&nbsp;Tipo de\\r\\n                        Atendimento</th>\\r\\n                      <th style=\\\"cursor: pointer\\\" (click)=\\\"onClickOrderBy('pacote.numero')\\\"><em\\r\\n                          [class]=\\\"getIconOrderBy('pacote.numero')\\\"></em>&nbsp;Número do Pacote</th>\\r\\n                      <th style=\\\"cursor: pointer\\\" (click)=\\\"onClickOrderBy('numero')\\\"><em\\r\\n                          [class]=\\\"getIconOrderBy('numero')\\\"></em>&nbsp;Número da Sessão</th>\\r\\n                    </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngFor=\\\"let atendimento of dados?.content\\\">\\r\\n                      <td>\\r\\n                        <button title=\\\"Editar\\\" (click)=\\\"onClickEditar(atendimento.id)\\\" class=\\\"btn btn-primary\\\"><em\\r\\n                            class=\\\"fa fa-pencil\\\"></em></button>\\r\\n                        <button title=\\\"Visualizar\\\" (click)=\\\"onClickOpenModalVisualizar(atendimento)\\\"\\r\\n                          class=\\\"btn btn-primary btn-left\\\"><em class=\\\"fa fa-eye\\\"></em></button>\\r\\n                        <button title=\\\"Gerenciar Lançamentos\\\" *ngIf=\\\"isSessao(atendimento.tipoAtendimentoId)\\\"\\r\\n                          (click)=\\\"onClickOpenModalGerenciarLancamentoSessao(atendimento.id)\\\"\\r\\n                          class=\\\"btn btn-success btn-left\\\"><em class=\\\"fa fa-usd\\\"></em></button>\\r\\n                        <button title=\\\"Gerenciar Lançamentos\\\" *ngIf=\\\"isPacote(atendimento.tipoAtendimentoId)\\\"\\r\\n                          (click)=\\\"onClickOpenModalGerenciarLancamentoPacote(atendimento.pacoteId)\\\"\\r\\n                          class=\\\"btn btn-success btn-left\\\"><em class=\\\"fa fa-usd\\\"></em></button>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        {{ atendimento.pacoteValor ? (atendimento.pacoteValor | currency:'BRL':'symbol':'0.2-2':'pt') : '-' }}\\r\\n                      </td>\\r\\n                      <td [ngStyle]=\\\"{'color': !atendimento.totalPago ? 'red' : 'green', 'font-weight': 'bold'}\\\"\\r\\n                        *ngIf=\\\"isSessao(atendimento.tipoAtendimentoId)\\\">\\r\\n                        {{ atendimento.totalPago || 0 | currency:'BRL':'symbol':'0.2-2':'pt' }}\\r\\n                      </td>\\r\\n                      <td [ngStyle]=\\\"{'color': atendimento.pacoteTotalPago < atendimento.pacoteValor ? 'red' : 'green', 'font-weight': 'bold'}\\\"\\r\\n                        *ngIf=\\\"isPacote(atendimento.tipoAtendimentoId)\\\">\\r\\n                        {{ atendimento.pacoteTotalPago || 0 | currency:'BRL':'symbol':'0.2-2':'pt' }}\\r\\n                      </td>\\r\\n                      <td *ngIf=\\\"isPacote(atendimento.tipoAtendimentoId); else elseTotalPagar\\\">\\r\\n                        {{ atendimento.pacoteValor - atendimento.pacoteTotalPago || 0 | currency:'BRL':'symbol':'0.2-2':'pt' }}\\r\\n                      </td>\\r\\n                      <ng-template #elseTotalPagar>\\r\\n                        <td>\\r\\n                          {{ '-' }}\\r\\n                        </td>\\r\\n                      </ng-template>\\r\\n                      <td [ngStyle]=\\\"{'color': atendimento.aberto ? 'red' : 'green', 'font-weight': 'bold'}\\\">\\r\\n                        {{ atendimento.aberto ? 'Em Aberto' : 'Encerrado' }}\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        {{ atendimento.pacienteNomeCompleto }}\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        {{ atendimento.usuarioNomeCompleto }}\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        {{ atendimento.preAtendimentoData | date: 'dd/MM/yyyy HH:mm' }}\\r\\n                      </td>\\r\\n                      <td *ngIf=\\\"atendimento?.posAtendimentoData\\\">\\r\\n                        {{ atendimento?.posAtendimentoData | date: 'dd/MM/yyyy HH:mm' }}\\r\\n                      </td>\\r\\n                      <td *ngIf=\\\"!atendimento?.posAtendimentoData\\\">\\r\\n                        {{ '-' }}\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        {{ calcularTempo(atendimento.preAtendimentoData, atendimento?.posAtendimentoData) }}\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        {{ atendimento?.tipoAtendimentoDescricao }}\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        {{ atendimento?.pacoteNumero || '-' }}\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        {{ atendimento.numero}}\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"box-footer\\\">\\r\\n              <app-page-action [dados]=\\\"dados\\\" [filtro]=\\\"filtro\\\" (searchByFilter)=\\\"searchByFilter()\\\">\\r\\n              </app-page-action>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <app-no-records *ngIf=\\\"showNoRecords && !dados.content?.length\\\"></app-no-records>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</section>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AtendimentoFormComponent } from './form/atendimento-form.component';\r\nimport { AtendimentoListComponent } from './list/atendimento-list.component';\r\nimport { AtendimentoFormResolver } from './resolver/atendimento-form.resolver';\r\nimport { AtendimentoListResolver } from './resolver/atendimento-list.resolver';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'drenagem',\r\n    component: AtendimentoListComponent,\r\n    data: {\r\n      id: 1,\r\n      descricao: 'Drenagem Linfática',\r\n      rota: 'drenagem'\r\n    },\r\n    resolve: {\r\n      resolve: AtendimentoListResolver\r\n    },\r\n  },\r\n  {\r\n    path: 'drenagem/incluir',\r\n    data: {\r\n      id: 1,\r\n      descricao: 'Drenagem Linfática',\r\n      rota: 'drenagem'\r\n    },\r\n    resolve: {\r\n      resolve: AtendimentoFormResolver\r\n    },\r\n    component: AtendimentoFormComponent\r\n  },\r\n  {\r\n    path: 'drenagem/alterar/:id',\r\n    data: {\r\n      id: 1,\r\n      descricao: 'Drenagem Linfática',\r\n      rota: 'drenagem'\r\n    },\r\n    resolve: {\r\n      resolve: AtendimentoFormResolver\r\n    },\r\n    component: AtendimentoFormComponent\r\n  },\r\n  {\r\n    path: 'fisioterapia',\r\n    data: {\r\n      id: 2,\r\n      descricao: 'Fisioterapia',\r\n      rota: 'fisioterapia'\r\n    },\r\n    resolve: {\r\n      resolve: AtendimentoListResolver\r\n    },\r\n    component: AtendimentoListComponent\r\n  },\r\n  {\r\n    path: 'fisioterapia/incluir',\r\n    data: {\r\n      id: 2,\r\n      descricao: 'Fisioterapia',\r\n      rota: 'fisioterapia'\r\n    },\r\n    resolve: {\r\n      resolve: AtendimentoFormResolver\r\n    },\r\n    component: AtendimentoFormComponent\r\n  },\r\n  {\r\n    path: 'fisioterapia/alterar/:id',\r\n    data: {\r\n      id: 2,\r\n      descricao: 'Fisioterapia',\r\n      rota: 'fisioterapia'\r\n    },\r\n    resolve: {\r\n      resolve: AtendimentoFormResolver\r\n    },\r\n    component: AtendimentoFormComponent\r\n  },\r\n  {\r\n    path: 'rpg',\r\n    data: {\r\n      id: 3,\r\n      descricao: 'Reeducação Postural Global',\r\n      rota: 'rpg'\r\n    },\r\n    resolve: {\r\n      resolve: AtendimentoListResolver\r\n    },\r\n    component: AtendimentoListComponent\r\n  },\r\n  {\r\n    path: 'rpg/incluir',\r\n    data: {\r\n      id: 3,\r\n      descricao: 'Reeducação Postural Global',\r\n      rota: 'rpg'\r\n    },\r\n    resolve: {\r\n      resolve: AtendimentoFormResolver\r\n    },\r\n    component: AtendimentoFormComponent\r\n  },\r\n  {\r\n    path: 'rpg/alterar/:id',\r\n    data: {\r\n      id: 3,\r\n      descricao: 'Reeducação Postural Global',\r\n      rota: 'rpg'\r\n    },\r\n    resolve: {\r\n      resolve: AtendimentoFormResolver\r\n    },\r\n    component: AtendimentoFormComponent\r\n  },\r\n  {\r\n    path: 'pilates',\r\n    data: {\r\n      id: 4,\r\n      descricao: 'Pilates',\r\n      rota: 'pilates'\r\n    },\r\n    resolve: {\r\n      resolve: AtendimentoListResolver\r\n    },\r\n    component: AtendimentoListComponent\r\n  },\r\n  {\r\n    path: 'pilates/incluir',\r\n    data: {\r\n      id: 4,\r\n      descricao: 'Pilates',\r\n      rota: 'pilates'\r\n    },\r\n    resolve: {\r\n      resolve: AtendimentoFormResolver\r\n    },\r\n    component: AtendimentoFormComponent\r\n  },\r\n  {\r\n    path: 'pilates/alterar/:id',\r\n    data: {\r\n      id: 4,\r\n      descricao: 'Pilates',\r\n      rota: 'pilates'\r\n    },\r\n    resolve: {\r\n      resolve: AtendimentoFormResolver\r\n    },\r\n    component: AtendimentoFormComponent\r\n  },\r\n  {\r\n    path: 'massagem-relaxante',\r\n    data: {\r\n      id: 5,\r\n      descricao: 'Massagem Relaxante',\r\n      rota: 'massagem-relaxante'\r\n    },\r\n    resolve: {\r\n      resolve: AtendimentoListResolver\r\n    },\r\n    component: AtendimentoListComponent\r\n  },\r\n  {\r\n    path: 'massagem-relaxante/incluir',\r\n    data: {\r\n      id: 5,\r\n      descricao: 'Massagem Relaxante',\r\n      rota: 'massagem-relaxante'\r\n    },\r\n    resolve: {\r\n      resolve: AtendimentoFormResolver\r\n    },\r\n    component: AtendimentoFormComponent\r\n  },\r\n  {\r\n    path: 'massagem-relaxante/alterar/:id',\r\n    data: {\r\n      id: 5,\r\n      descricao: 'Massagem Relaxante',\r\n      rota: 'massagem-relaxante'\r\n    },\r\n    resolve: {\r\n      resolve: AtendimentoFormResolver\r\n    },\r\n    component: AtendimentoFormComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  providers: [\r\n    AtendimentoFormResolver,\r\n    AtendimentoListResolver\r\n  ]\r\n})\r\nexport class AtendimentoRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { SismsCommonsModule } from '../sisms-commons.module';\r\nimport { AtendimentoRoutingModule } from './atendimento-routing.module';\r\nimport { AtendimentoFormComponent } from './form/atendimento-form.component';\r\nimport { AtendimentoListComponent } from './list/atendimento-list.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AtendimentoListComponent,\r\n    AtendimentoFormComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AtendimentoRoutingModule,\r\n    SismsCommonsModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class AtendimentoModule { }\r\n","import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { base64StringToBlob } from 'blob-util';\r\nimport { BsModalService } from 'ngx-bootstrap';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { resizeBase64ForMaxWidthAndMaxHeight } from 'resize-base64';\r\nimport { Subscription } from 'rxjs';\r\nimport { CategoriaAtendimentoEnum } from 'src/app/core/model/enum/categoria-atendimento.enum';\r\nimport { TipoAtendimentoEnum } from 'src/app/core/model/enum/tipo-atendimento.enum';\r\nimport { Atendimento } from 'src/app/core/model/model/atendimento.model';\r\nimport { CategoriaAtendimentoRouting } from 'src/app/core/model/model/categoria-atendimento-routing.model';\r\nimport { OutraMedidaSelecionada } from 'src/app/core/model/model/outra-medida-selecionada.model';\r\nimport { OutraMedida } from 'src/app/core/model/model/outra-medida.model';\r\nimport { Paciente } from 'src/app/core/model/model/paciente.model';\r\nimport { Pacote } from 'src/app/core/model/model/pacote.model';\r\nimport { PosAtendimentoOutraMedida } from 'src/app/core/model/model/pos-atendimento-outra-medida.model';\r\nimport { PreAtendimentoOutraMedida } from 'src/app/core/model/model/pre-atendimento-outra-medida.model';\r\nimport { Response } from 'src/app/core/model/model/response.model';\r\nimport { TipoAtendimento } from 'src/app/core/model/model/tipo-atendimento.model';\r\nimport { MessageService } from 'src/app/core/services/message.service';\r\nimport { OutraMedidaService } from 'src/app/core/services/outra-medida.service';\r\nimport { PacoteService } from 'src/app/core/services/pacote.service';\r\nimport { Messages } from 'src/app/shared/messages/messages';\r\nimport { ModalConfirmacaoComponent } from 'src/app/shared/modais/modal-confirmacao/modal-confirmacao.component';\r\nimport { ModalCriarPacoteComponent } from 'src/app/shared/modais/modal-criar-pacote/modal-criar-pacote.component';\r\nimport Util from 'src/app/shared/util/util';\r\nimport { AtendimentoService } from '../../../core/services/atendimento.service';\r\n\r\n@Component({\r\n  selector: 'app-atendimento-form',\r\n  templateUrl: './atendimento-form.component.html'\r\n})\r\nexport class AtendimentoFormComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild('inputImage', { static: false }) inputImage: ElementRef;\r\n\r\n  public form: FormGroup;\r\n  public tiposAtendimento = new Array<TipoAtendimento>();\r\n  public pacientes = new Array<Paciente>();\r\n  public outrasMedidas = new Array<OutraMedida>();\r\n  public outrasMedidasSelecionadas = new Array<OutraMedidaSelecionada>();\r\n  public tipoAtendimentoId = TipoAtendimentoEnum.SESSAO;\r\n  public categoriaAtendimentoRouting = new CategoriaAtendimentoRouting();\r\n  public pacote = new Pacote();\r\n  public quantidadeSessao = 0;\r\n  public subscription: Subscription;\r\n  public isCadastrarPosAtendimento = false;\r\n  public isInvalidForm = false;\r\n  public isInvalidFormPacienteId = false;\r\n  public isInvalidFormOutraMedidaDescricao = false;\r\n\r\n  public constructor(\r\n    private formBuilder: FormBuilder,\r\n    private pacotService: PacoteService,\r\n    private service: AtendimentoService,\r\n    private route: ActivatedRoute,\r\n    public messageService: MessageService,\r\n    private router: Router,\r\n    private spinnerService: NgxSpinnerService,\r\n    private modalService: BsModalService,\r\n    private outraMedidaService: OutraMedidaService\r\n  ) {\r\n    this.subscription = this.outraMedidaService.getOutrasMedidas().subscribe(() => {\r\n      this.onRefreshComboOutraMedida();\r\n    });\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.onCreateForm();\r\n    this.onLoadCategoriaAtendimento();\r\n    this.findById();\r\n    this.onLoadCombos();\r\n  }\r\n\r\n  public checkTipoAtendimentoPacote(): boolean {\r\n    return this.tipoAtendimentoId === TipoAtendimentoEnum.PACOTE;\r\n  }\r\n\r\n  public checkCategoriaAtendimentoFisioterapia(): boolean {\r\n    return this.categoriaAtendimentoRouting.id === CategoriaAtendimentoEnum.FISIOTERAPIA;\r\n  }\r\n\r\n  public checkCategoriaAtendimentoRPG(): boolean {\r\n    return this.categoriaAtendimentoRouting.id === CategoriaAtendimentoEnum.RPG;\r\n  }\r\n\r\n  public checkCategoriaAtendimentoPilates(): boolean {\r\n    return this.categoriaAtendimentoRouting.id === CategoriaAtendimentoEnum.PILATES;\r\n  }\r\n\r\n  public checkCategoriaAtendimentoMassagem(): boolean {\r\n    return this.categoriaAtendimentoRouting.id === CategoriaAtendimentoEnum.MASSAGEM_RELAXANTE;\r\n  }\r\n\r\n  public get isNotMassagem(): boolean {\r\n    return this.categoriaAtendimentoRouting.id !== CategoriaAtendimentoEnum.MASSAGEM_RELAXANTE;\r\n  }\r\n\r\n  private findById(): void {\r\n    this.route.data.subscribe(dados => {\r\n      const response: Response<Atendimento> = dados.resolve.atendimento;\r\n      if (!response.result) {\r\n        return;\r\n      }\r\n      this.form.setValue({\r\n        id: response.result.id,\r\n        pacoteId: response.result.pacoteId || null,\r\n        pacienteId: response.result.pacienteId,\r\n        preAtendimentoId: response.result.preAtendimentoId,\r\n        preAtendimentoData: Util.convertDateTimeToString(new Date(response.result.preAtendimentoData)),\r\n        preAtendimentoPressaoArterial: response.result.preAtendimentoPressaoArterial || null,\r\n        preAtendimentoPeso: response.result.preAtendimentoPeso || 0,\r\n        preAtendimentoSupraUmbilical: response.result.preAtendimentoSupraUmbilical || 0,\r\n        preAtendimentoLinhaUmbilical: response.result.preAtendimentoLinhaUmbilical || 0,\r\n        preAtendimentoInfraUmbilical: response.result.preAtendimentoInfraUmbilical || 0,\r\n        preAtendimentoObservacao: response.result.preAtendimentoObservacao || null,\r\n        preAtendimentoOutrasMedidas: [],\r\n        posAtendimentoId: response.result.posAtendimentoId || null,\r\n        posAtendimentoData: Util.convertDateTimeToString(response.result.posAtendimentoData ? new Date(response.result.posAtendimentoData) : null),\r\n        posAtendimentoPressaoArterial: response.result.posAtendimentoPressaoArterial || null,\r\n        posAtendimentoPeso: response.result.posAtendimentoPeso || 0,\r\n        posAtendimentoSupraUmbilical: response.result.posAtendimentoSupraUmbilical || 0,\r\n        posAtendimentoLinhaUmbilical: response.result.posAtendimentoLinhaUmbilical || 0,\r\n        posAtendimentoInfraUmbilical: response.result.posAtendimentoInfraUmbilical || 0,\r\n        posAtendimentoObservacao: response.result.posAtendimentoObservacao || null,\r\n        posAtendimentoOutrasMedidas: [],\r\n        categoriaAtendimentoId: response.result.categoriaAtendimentoId,\r\n        imagens: response.result.imagens || [],\r\n        aberto: response.result.aberto,\r\n        conduta: response.result.conduta || null,\r\n      });\r\n      this.form.controls.pacienteId.disable();\r\n      this.form.controls.pacienteId.updateValueAndValidity();\r\n      this.isCadastrarPosAtendimento = true;\r\n      if (this.form.controls.imagens.value) {\r\n        this.form.controls.imagens.value.forEach(element => {\r\n          element.index = this.gerarIndex(this.form.controls.imagens.value);\r\n        });\r\n      }\r\n      const listaPre: PreAtendimentoOutraMedida[] = response.result.preAtendimentoOutrasMedidas;\r\n      const listaPos: PosAtendimentoOutraMedida[] = response.result.posAtendimentoOutrasMedidas;\r\n      for (let i = 0; i < listaPre.length; i++) {\r\n        this.outrasMedidasSelecionadas.push({\r\n          index: this.gerarIndex(this.outrasMedidasSelecionadas),\r\n          outraMedidaId: listaPre[i].outraMedidaId,\r\n          valorPre: listaPre[i].valor,\r\n          valorPos: listaPos ? listaPos[i].valor : 0,\r\n        });\r\n      }\r\n      this.quantidadeSessao = response.result.numero;\r\n      if (this.form.value.pacoteId) {\r\n        this.tipoAtendimentoId = TipoAtendimentoEnum.PACOTE;\r\n        this.pacotService.findById(this.form.value.pacoteId).subscribe(packageResponse => {\r\n          this.pacote = packageResponse.result;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public onClickCancelar(): void {\r\n    this.messageService.clearAllMessages();\r\n    window.history.back();\r\n  }\r\n\r\n  public onClickDownloadFile(index: number): void {\r\n    this.messageService.clearAllMessages();\r\n    this.spinnerService.show();\r\n    try {\r\n      const imagem = this.form.controls.imagens.value.find(x => x.index === index);\r\n      const array = imagem.imagem.toString().split(';base64,');\r\n      const blob = base64StringToBlob(array[array.length - 1]);\r\n      const elemento = document.createElement('a');\r\n      elemento.href = window.URL.createObjectURL(blob);\r\n      elemento.download = imagem.nome;\r\n      elemento.click();\r\n      elemento.remove();\r\n      this.spinnerService.hide();\r\n    } catch {\r\n      this.messageService.sendMessageError(Messages.MSG0011);\r\n      this.spinnerService.hide();\r\n    }\r\n  }\r\n\r\n  private onLoadCategoriaAtendimento(): void {\r\n    this.route.data.subscribe((response: CategoriaAtendimentoRouting) => {\r\n      this.categoriaAtendimentoRouting = response;\r\n      this.form.controls.categoriaAtendimentoId.setValue(response.id);\r\n    });\r\n  }\r\n\r\n  private onLoadCombos(): void {\r\n    this.route.data.subscribe(responseData => {\r\n      responseData.resolve.combos.subscribe(responseComo => {\r\n        this.pacientes = responseComo[0].result;\r\n        this.outrasMedidas = responseComo[1].result;\r\n        this.tiposAtendimento = responseComo[2].result;\r\n      });\r\n    });\r\n  }\r\n\r\n  private onRefreshComboOutraMedida(): void {\r\n    this.outraMedidaService.findAll().subscribe(response => {\r\n      this.outrasMedidas = response.result;\r\n    });\r\n  }\r\n\r\n  private onCreateForm(): void {\r\n    this.form = this.formBuilder.group({\r\n      id: [null],\r\n      pacoteId: [null],\r\n      pacienteId: [null, Validators.required],\r\n      preAtendimentoId: [null],\r\n      preAtendimentoData: [null, Validators.required],\r\n      preAtendimentoPressaoArterial: [null],\r\n      preAtendimentoPeso: [0],\r\n      preAtendimentoSupraUmbilical: [0],\r\n      preAtendimentoLinhaUmbilical: [0],\r\n      preAtendimentoInfraUmbilical: [0],\r\n      preAtendimentoObservacao: [null],\r\n      preAtendimentoOutrasMedidas: [[]],\r\n      posAtendimentoId: [null],\r\n      posAtendimentoData: [null, Validators.required],\r\n      posAtendimentoPressaoArterial: [null],\r\n      posAtendimentoPeso: [0],\r\n      posAtendimentoSupraUmbilical: [0],\r\n      posAtendimentoLinhaUmbilical: [0],\r\n      posAtendimentoInfraUmbilical: [0],\r\n      posAtendimentoObservacao: [null],\r\n      posAtendimentoOutrasMedidas: [[]],\r\n      categoriaAtendimentoId: [null],\r\n      imagens: [[]],\r\n      aberto: [true],\r\n      conduta: [null],\r\n    });\r\n  }\r\n\r\n  public setDataHoraAtual(field: string): void {\r\n    if (!this.form.controls[field].value) {\r\n      this.form.controls[field].setValue(Util.convertDateTimeToString(new Date()));\r\n    }\r\n  }\r\n\r\n  public onChangeTipoAtendimento(): void {\r\n    this.messageService.clearAllMessages();\r\n    this.onResetValues();\r\n  }\r\n\r\n  private getNomePaciente(id: number): string {\r\n    return this.pacientes.find(x => x.id === id).nomeCompleto;\r\n  }\r\n\r\n  public async onChangePaciente(): Promise<void> {\r\n    this.messageService.clearAllMessages();\r\n    const pacienteId = this.form.controls.pacienteId.value;\r\n    this.onResetValues();\r\n    if (pacienteId) {\r\n      this.isInvalidFormPacienteId = false;\r\n      this.form.controls.pacienteId.setValue(pacienteId);\r\n    } else {\r\n      this.isInvalidFormPacienteId = true;\r\n    }\r\n    if (pacienteId && this.tipoAtendimentoId === TipoAtendimentoEnum.SESSAO) {\r\n      await this.service.findTotalBySession(pacienteId, this.categoriaAtendimentoRouting.id).toPromise().then(response => {\r\n        this.quantidadeSessao = response.result + 1;\r\n      });\r\n    } else if (pacienteId && this.tipoAtendimentoId === TipoAtendimentoEnum.PACOTE) {\r\n      await this.pacotService.findLastOpen(this.categoriaAtendimentoRouting.id, pacienteId).toPromise().then(response => {\r\n        this.pacote = response.result;\r\n      });\r\n      if (!this.pacote) {\r\n        const pacienteNomeCompleto = this.getNomePaciente(pacienteId);\r\n        const modalRef = this.modalService.show(ModalConfirmacaoComponent, { backdrop: 'static' });\r\n        modalRef.content.titulo = 'Confirmação de Criação de Pacote';\r\n        modalRef.content.corpo = `Não existe pacote de ${this.categoriaAtendimentoRouting.descricao} em aberto para o paciente ${pacienteNomeCompleto}. Deseja criar agora?`;\r\n        modalRef.content.onClose.subscribe((result: boolean) => {\r\n          if (result) {\r\n            this.onOpenModalCriarPacote(true);\r\n          } else {\r\n            this.onResetValues();\r\n          }\r\n        });\r\n      } else {\r\n        if (this.pacote.quantidadeSessao === this.pacote.quantidadeAtendimentos) {\r\n          const pacienteNomeCompleto = this.getNomePaciente(pacienteId);\r\n          const modalRef = this.modalService.show(ModalConfirmacaoComponent, { backdrop: 'static' });\r\n          modalRef.content.titulo = 'Aviso de Limite de Atendimentos';\r\n          modalRef.content.corpo = `O limite de atendimentos para este pacote já foi atingido (${this.pacote.quantidadeAtendimentos}/${this.pacote.quantidadeSessao}). Crie um novo pacote ou altere o pacote atual. Criar novo pacote?`;\r\n          modalRef.content.onClose.subscribe((result: boolean) => {\r\n            if (result) {\r\n              this.onOpenModalCriarPacote(true);\r\n            } else {\r\n              this.onResetValues();\r\n            }\r\n          });\r\n        }\r\n        this.form.controls.pacoteId.setValue(this.pacote.id);\r\n        this.quantidadeSessao = this.pacote.quantidadeAtendimentos + 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  public onOpenModalCriarPacote(isResetValues: boolean): void {\r\n    const pacienteId = this.form.controls.pacienteId.value;\r\n    const pacienteNomeCompleto = this.getNomePaciente(pacienteId);\r\n    const initialState = {\r\n      dados: {\r\n        pacienteId: pacienteId,\r\n        pacienteNomeCompleto: pacienteNomeCompleto,\r\n        categoriaAtendimentoId: this.categoriaAtendimentoRouting.id,\r\n        categoriaAtendimentoDescricao: this.categoriaAtendimentoRouting.descricao\r\n      }\r\n    };\r\n    const modalRefPackage = this.modalService.show(ModalCriarPacoteComponent, { class: 'gray modal-lg', initialState, backdrop: 'static' });\r\n    modalRefPackage.content.onClose.subscribe((result: boolean) => {\r\n      if (result) {\r\n        this.pacotService.findLastOpen(this.categoriaAtendimentoRouting.id, pacienteId).subscribe(response => {\r\n          this.pacote = response.result;\r\n          this.form.controls.pacoteId.setValue(this.pacote.id);\r\n          this.quantidadeSessao = response.result.quantidadeAtendimentos + 1;\r\n        });\r\n      } else {\r\n        if (isResetValues) {\r\n          this.onResetValues();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private onResetValues(): void {\r\n    this.onCreateForm();\r\n    this.form.controls.categoriaAtendimentoId.setValue(this.categoriaAtendimentoRouting.id);\r\n    this.outrasMedidasSelecionadas = new Array<OutraMedidaSelecionada>();\r\n    this.quantidadeSessao = 0;\r\n    this.pacote = new Pacote();\r\n    this.isCadastrarPosAtendimento = false;\r\n    this.isInvalidFormPacienteId = false;\r\n    this.isInvalidForm = false;\r\n  }\r\n\r\n  public onClickAdicionarMedida(): void {\r\n    if (this.outrasMedidasSelecionadas.length < 10) {\r\n      this.outrasMedidasSelecionadas.push({\r\n        index: this.gerarIndex(this.outrasMedidasSelecionadas),\r\n        outraMedidaId: null,\r\n        valorPre: 0,\r\n        valorPos: 0\r\n      });\r\n    } else {\r\n      this.messageService.sendMessageError(Messages.MSG0025);\r\n    }\r\n  }\r\n\r\n  public onClickRemoverOutraMedida(index: number): void {\r\n    const result = this.outrasMedidasSelecionadas.findIndex(x => x.index === index);\r\n    if (result !== -1) {\r\n      this.outrasMedidasSelecionadas.splice(result, 1);\r\n    }\r\n  }\r\n\r\n  public onChangeImage(images: File[]): void {\r\n    this.messageService.clearAllMessages();\r\n    if (this.form.value.imagens.length + images.length > 10) {\r\n      this.messageService.sendMessageError(Messages.MSG0024);\r\n      return;\r\n    }\r\n    if (images && images.length) {\r\n      try {\r\n        if (!this.validarFormatoImagem(images)) {\r\n          this.messageService.sendMessageError(images.length > 1 ? Messages.MSG0021 : Messages.MSG0020);\r\n          return;\r\n        }\r\n        if (!this.validarTamanhoImagem(images)) {\r\n          this.messageService.sendMessageError(images.length > 1 ? Messages.MSG0023 : Messages.MSG0022);\r\n          return;\r\n        }\r\n        for (const image of images) {\r\n          const reader = new FileReader();\r\n          reader.readAsDataURL(image);\r\n          reader.onload = () => {\r\n            this.spinnerService.show();\r\n            resizeBase64ForMaxWidthAndMaxHeight(reader.result, 1024, 768, (resizedImage) => {\r\n              this.form.value.imagens.push({\r\n                index: this.gerarIndex(this.form.value.imagens),\r\n                nome: image.name,\r\n                imagem: resizedImage,\r\n                observacao: null\r\n              });\r\n              this.spinnerService.hide();\r\n            });\r\n          };\r\n        }\r\n      } catch {\r\n        this.messageService.sendMessageError(images.length > 1 ? Messages.MSG0012 : Messages.MSG0011);\r\n        this.spinnerService.hide();\r\n      }\r\n    }\r\n  }\r\n\r\n  private gerarIndex(lista: any[]): number {\r\n    while (true) {\r\n      const index = Math.floor((Math.random() * 100) + 1);\r\n      if (!lista.find(x => x.index === index)) {\r\n        return index;\r\n      }\r\n    }\r\n  }\r\n\r\n  private validarFormatoImagem(imagens: File[]): boolean {\r\n    for (const image of imagens) {\r\n      if (!Util.isFormatoImagemValido(image)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private validarTamanhoImagem(imagens: File[]): boolean {\r\n    for (const image of imagens) {\r\n      if (!Util.isTamanhoArquivoValido(image)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public onClickRemoverImagem(index: number): void {\r\n    const result = this.form.value.imagens.findIndex(x => x.index === index);\r\n    if (result !== -1) {\r\n      this.form.value.imagens.splice(result, 1);\r\n    }\r\n  }\r\n\r\n  private removerValidacao(): void {\r\n    if (!this.isCadastrarPosAtendimento) {\r\n      this.form.controls.posAtendimentoData.setValidators([]);\r\n      this.form.controls.posAtendimentoData.updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  public onClickFormSubmit(): void {\r\n    this.messageService.clearAllMessages();\r\n    this.removerValidacao();\r\n    if (this.form.valid) {\r\n      const preAtendimentoData = this.form.value.preAtendimentoData;\r\n      const posAtendimentoData = this.form.value.posAtendimentoData;\r\n      if (preAtendimentoData && !Util.isDataHoraValida(preAtendimentoData)) {\r\n        this.messageService.sendMessageError(Messages.MSG0016);\r\n        return;\r\n      }\r\n      if (posAtendimentoData && !Util.isDataHoraValida(posAtendimentoData)) {\r\n        this.messageService.sendMessageError(Messages.MSG0017);\r\n        return;\r\n      }\r\n      this.form.value.preAtendimentoOutrasMedidas = [];\r\n      this.form.value.posAtendimentoOutrasMedidas = [];\r\n      if (this.outrasMedidasSelecionadas.length) {\r\n        for (const item of this.outrasMedidasSelecionadas) {\r\n          if (!item.outraMedidaId) {\r\n            this.showErrorInvalidForm();\r\n            return;\r\n          }\r\n          this.form.value.preAtendimentoOutrasMedidas.push({\r\n            outraMedidaId: item.outraMedidaId,\r\n            valor: item.valorPre\r\n          });\r\n          if (this.isCadastrarPosAtendimento) {\r\n            this.form.value.posAtendimentoOutrasMedidas.push({\r\n              outraMedidaId: item.outraMedidaId,\r\n              valor: item.valorPos\r\n            });\r\n          }\r\n        }\r\n      }\r\n      const formValue: Atendimento = {\r\n        ...this.form.value,\r\n        pacienteId: this.form.controls.pacienteId.value,\r\n        aberto: !this.isCadastrarPosAtendimento,\r\n        preAtendimentoData: Util.convertStringToDateTime(preAtendimentoData),\r\n        posAtendimentoData: Util.convertStringToDateTime(posAtendimentoData)\r\n      };\r\n      if (formValue.id) {\r\n        this.service.update(formValue.id, formValue).subscribe(response => {\r\n          this.messageService.sendMessageSuccess(response.message);\r\n          this.router.navigate([`/atendimento/${this.categoriaAtendimentoRouting.rota}`]);\r\n        });\r\n      } else {\r\n        this.service.create(formValue).subscribe(response => {\r\n          this.messageService.sendMessageSuccess(response.message);\r\n          this.router.navigate([`/atendimento/${this.categoriaAtendimentoRouting.rota}`]);\r\n        });\r\n      }\r\n    } else {\r\n      this.showErrorInvalidForm();\r\n    }\r\n  }\r\n\r\n  private showErrorInvalidForm(): void {\r\n    this.isInvalidForm = true;\r\n    this.isInvalidFormOutraMedidaDescricao = true;\r\n    this.messageService.sendMessageError(Messages.MSG0004);\r\n  }\r\n\r\n  public isDrenagem(): boolean {\r\n    return this.categoriaAtendimentoRouting.id === CategoriaAtendimentoEnum.DRENAGEM_LINFATICA;\r\n  }\r\n\r\n  public isFisioterapia(): boolean {\r\n    return this.categoriaAtendimentoRouting.id === CategoriaAtendimentoEnum.FISIOTERAPIA;\r\n  }\r\n\r\n  showDadosPacote(): boolean {\r\n    return this.form.controls.pacienteId.value && this.checkTipoAtendimentoPacote() && this.pacote.id ? true : false;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BsModalService } from 'ngx-bootstrap';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthGuard } from 'src/app/core/guards/auth.guard';\r\nimport { PerfilEnum } from 'src/app/core/model/enum/perfil.enum';\r\nimport { TipoAtendimentoEnum } from 'src/app/core/model/enum/tipo-atendimento.enum';\r\nimport { AtendimentoFilter } from 'src/app/core/model/filter/atendimento.filter';\r\nimport { PageableFilter } from 'src/app/core/model/filter/filter.filter';\r\nimport { Atendimento } from 'src/app/core/model/model/atendimento.model';\r\nimport { CategoriaAtendimentoRouting } from 'src/app/core/model/model/categoria-atendimento-routing.model';\r\nimport { Response } from 'src/app/core/model/model/response.model';\r\nimport { Usuario } from 'src/app/core/model/model/usuario.model';\r\nimport { LancamentoService } from 'src/app/core/services/lancamento.service';\r\nimport { MessageService } from 'src/app/core/services/message.service';\r\nimport { PacoteService } from 'src/app/core/services/pacote.service';\r\nimport { Pagination } from 'src/app/shared/components/pagination/pagination';\r\nimport { Messages } from 'src/app/shared/messages/messages';\r\nimport { ModalVisualizarAtendimentoComponent } from 'src/app/shared/modais/modal-visualizar-atendimento/modal-visualizar-atendimento.component';\r\nimport Util from 'src/app/shared/util/util';\r\nimport { Paciente } from '../../../core/model/model/paciente.model';\r\nimport Page from '../../../core/model/model/page.model';\r\nimport { TipoAtendimento } from '../../../core/model/model/tipo-atendimento.model';\r\nimport { AtendimentoService } from '../../../core/services/atendimento.service';\r\nimport { ModalGerenciarLancamentoPacoteComponent } from '../../controle-caixa/modal/gerenciar-lancamento-pacote/modal-gerenciar-lancamento-pacote.component';\r\nimport { ModalGerenciarLancamentoSessaoComponent } from '../../controle-caixa/modal/gerenciar-lancamento-sessao/modal-gerenciar-lancamento-sessao.component';\r\n\r\n@Component({\r\n  selector: 'app-atendimento-list',\r\n  templateUrl: './atendimento-list.component.html'\r\n})\r\nexport class AtendimentoListComponent extends Pagination<AtendimentoFilter> implements OnInit {\r\n\r\n  public pacientes = new Array<Paciente>();\r\n  public usuarios = new Array<Usuario>();\r\n  public tiposAtendimento = new Array<TipoAtendimento>();\r\n  public categoriaAtendimentoRouting = new CategoriaAtendimentoRouting();\r\n  public dados = new Page<Array<Atendimento>>();\r\n  public currentUser = new Usuario();\r\n  public permissaoAdministrador = PerfilEnum.ADMINISTRADOR;\r\n  public form: FormGroup;\r\n  public showNoRecords = false;\r\n  public subscription: Subscription;\r\n\r\n  public constructor(\r\n    private formBuilder: FormBuilder,\r\n    private service: AtendimentoService,\r\n    messageService: MessageService,\r\n    private route: ActivatedRoute,\r\n    private pacoteService: PacoteService,\r\n    private router: Router,\r\n    public authGuardService: AuthGuard,\r\n    private modalService: BsModalService,\r\n    private lancamentoService: LancamentoService,\r\n  ) {\r\n    super(messageService);\r\n    this.subscription = this.lancamentoService.getLancamento().subscribe(() => {\r\n      this.searchByFilter();\r\n    });\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.onCreateForm();\r\n    this.onLoadCombos();\r\n    this.onLoadCategoriaAtendimento();\r\n  }\r\n\r\n  public isSessao(value: number): boolean {\r\n    return TipoAtendimentoEnum.SESSAO === value;\r\n  }\r\n\r\n  public isPacote(value: number): boolean {\r\n    return TipoAtendimentoEnum.PACOTE === value;\r\n  }\r\n\r\n  public calcularTempo(dataInicio: any, dataFim: any): string {\r\n    return Util.calcularTempoHorasMinutos(dataInicio, dataFim);\r\n  }\r\n\r\n  private onLoadCategoriaAtendimento(): void {\r\n    this.route.data.subscribe((response: CategoriaAtendimentoRouting) => {\r\n      this.categoriaAtendimentoRouting = response;\r\n      this.form.controls.categoriaAtendimentoId.setValue(response.id);\r\n    });\r\n  }\r\n\r\n  private onCreateForm(): void {\r\n    this.form = this.formBuilder.group({\r\n      tipoAtendimentoId: [null],\r\n      pacienteId: [null],\r\n      usuarioId: [null],\r\n      preAtendimentoData: [null],\r\n      posAtendimentoData: [null],\r\n      aberto: null,\r\n      categoriaAtendimentoId: [null]\r\n    });\r\n  }\r\n\r\n  private onLoadCombos(): void {\r\n    this.route.data.subscribe(response => {\r\n      this.pacientes = response.resolve[0].result;\r\n      this.usuarios = response.resolve[1].result;\r\n      this.tiposAtendimento = response.resolve[2].result;\r\n    });\r\n  }\r\n\r\n  public onClickFormSubmit(): void {\r\n    this.messageService.clearAllMessages();\r\n    const dataInicio = this.form.value.preAtendimentoData;\r\n    const dataFim = this.form.value.posAtendimentoData;\r\n    if (dataInicio && !Util.isDataHoraValida(dataInicio)) {\r\n      this.messageService.sendMessageError(Messages.MSG0016);\r\n      return;\r\n    }\r\n    if (dataFim && !Util.isDataHoraValida(dataFim)) {\r\n      this.messageService.sendMessageError(Messages.MSG0017);\r\n      return;\r\n    }\r\n    this.filtro = new PageableFilter<AtendimentoFilter>();\r\n    this.filtro = {\r\n      ...this.filtro,\r\n      orderBy: 'preAtendimento.data',\r\n      direction: 'DESC',\r\n      filter: {\r\n        ...this.form.value,\r\n        preAtendimentoData: Util.convertStringToDateTime(dataInicio),\r\n        posAtendimentoData: Util.convertStringToDateTime(dataFim)\r\n      }\r\n    };\r\n    this.searchByFilter();\r\n  }\r\n\r\n  public searchByFilter(): void {\r\n    this.service.findByFilter(this.filtro).subscribe(response => {\r\n      this.showNoRecords = true;\r\n      this.dados = response.result;\r\n    });\r\n  }\r\n\r\n  public onClickLimparCampos(): void {\r\n    this.messageService.clearAllMessages();\r\n    this.onCreateForm();\r\n    this.dados = new Page<Array<Atendimento>>();\r\n    this.filtro = new PageableFilter<AtendimentoFilter>();\r\n    this.form.controls.categoriaAtendimentoId.setValue(this.categoriaAtendimentoRouting.id);\r\n    this.showNoRecords = false;\r\n  }\r\n\r\n  public onClickEditar(id: number): void {\r\n    this.messageService.clearAllMessages();\r\n    this.router.navigate([`/atendimento/${this.categoriaAtendimentoRouting.rota}/alterar/${id}`]);\r\n  }\r\n\r\n  public async onClickOpenModalVisualizar(atendimento: Atendimento): Promise<void> {\r\n    this.messageService.clearAllMessages();\r\n    const initialState = {\r\n      atendimento: (await this.service.findById(atendimento.id).toPromise()).result,\r\n      pacote: atendimento.pacoteId ? (await this.pacoteService.findById(atendimento.pacoteId).toPromise()).result : null,\r\n    };\r\n    this.modalService.show(ModalVisualizarAtendimentoComponent, { initialState, class: 'gray modal-lg', backdrop: 'static' });\r\n  }\r\n\r\n  public async onClickOpenModalGerenciarLancamentoSessao(id: number): Promise<void> {\r\n    this.messageService.clearAllMessages();\r\n    const initialState = {\r\n      atendimento: (await this.service.findById(id).toPromise()).result\r\n    };\r\n    this.modalService.show(ModalGerenciarLancamentoSessaoComponent, { initialState, class: 'gray modal-lg', backdrop: 'static' });\r\n  }\r\n\r\n  public async onClickOpenModalGerenciarLancamentoPacote(id: number): Promise<void> {\r\n    this.messageService.clearAllMessages();\r\n    const initialState = {\r\n      pacote: (await this.pacoteService.findById(id).toPromise()).result\r\n    };\r\n    this.modalService.show(ModalGerenciarLancamentoPacoteComponent, { initialState, class: 'gray modal-lg', backdrop: 'static' });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router } from '@angular/router';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { Atendimento } from 'src/app/core/model/model/atendimento.model';\r\nimport { Response } from 'src/app/core/model/model/response.model';\r\nimport { AtendimentoService } from 'src/app/core/services/atendimento.service';\r\nimport { MessageService } from 'src/app/core/services/message.service';\r\nimport { OutraMedidaService } from 'src/app/core/services/outra-medida.service';\r\nimport { PacienteService } from 'src/app/core/services/paciente.service';\r\nimport { TipoAtendimentoService } from 'src/app/core/services/tipo-atendimento.service';\r\nimport { Messages } from 'src/app/shared/messages/messages';\r\n\r\n@Injectable()\r\nexport class AtendimentoFormResolver implements Resolve<Observable<any>> {\r\n\r\n    constructor(\r\n        private atendimentoService: AtendimentoService,\r\n        private messageService: MessageService,\r\n        private router: Router,\r\n        private pacienteService: PacienteService,\r\n        private tipoAtendimentoService: TipoAtendimentoService,\r\n        private outraMedidaService: OutraMedidaService\r\n    ) { }\r\n\r\n    async resolve(route: ActivatedRouteSnapshot): Promise<any> {\r\n        const id = route.params.id;\r\n        let atendimento = new Response<Atendimento>();\r\n        if (id) {\r\n            const categoriaAtendimentoId = +route.data.id;\r\n            atendimento = await this.atendimentoService.findById(+id).toPromise();\r\n            if (!atendimento || categoriaAtendimentoId !== atendimento.result.categoriaAtendimentoId) {\r\n                this.messageService.sendMessageError(Messages.MSG0027);\r\n                this.router.navigate(['/home']);\r\n            }\r\n        }\r\n        /*return {\r\n            atendimento: atendimento,\r\n            this.pacienteService.findAllActive(),\r\n            this.outraMedidaService.findAll(),\r\n            this.tipoAtendimentoService.findAll()\r\n        };*/\r\n        return {\r\n            atendimento: atendimento,\r\n            combos: forkJoin([\r\n                this.pacienteService.findAllActive(),\r\n                this.outraMedidaService.findAll(),\r\n                this.tipoAtendimentoService.findAll()\r\n            ])\r\n        };\r\n\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { PerfilEnum } from 'src/app/core/model/enum/perfil.enum';\r\nimport { PacienteService } from 'src/app/core/services/paciente.service';\r\nimport { SharedService } from 'src/app/core/services/shared.service';\r\nimport { TipoAtendimentoService } from 'src/app/core/services/tipo-atendimento.service';\r\nimport { UsuarioService } from 'src/app/core/services/usuario.service';\r\n\r\n@Injectable()\r\nexport class AtendimentoListResolver implements Resolve<Observable<any>> {\r\n\r\n    constructor(\r\n        private pacienteService: PacienteService,\r\n        private tipoAtendimentoService: TipoAtendimentoService,\r\n        private usuarioService: UsuarioService,\r\n        private sharedService: SharedService\r\n    ) { }\r\n\r\n    resolve(): Observable<any> {\r\n        return forkJoin([\r\n            this.pacienteService.findAllActive(),\r\n            this.isAdministrador() ? this.usuarioService.findAll() : null,\r\n            this.tipoAtendimentoService.findAll()\r\n        ]);\r\n    }\r\n\r\n    private isAdministrador(): boolean {\r\n        return this.sharedService.getUserSession().perfilRole === PerfilEnum.ADMINISTRADOR;\r\n    }\r\n\r\n}\r\n","export class CategoriaAtendimentoRouting {\r\n\r\n    constructor(\r\n        public id?: number,\r\n        public descricao?: string,\r\n        public rota?: string\r\n    ) { }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}