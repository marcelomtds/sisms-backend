{"version":3,"sources":["./src/app/components/reserva/form/reserva-form.component.html","./src/app/components/reserva/list/reserva-list.component.html","./src/app/components/reserva/form/reserva-form.component.ts","./src/app/components/reserva/list/reserva-list.component.ts","./src/app/components/reserva/reserva-routing.module.ts","./src/app/components/reserva/reserva.module.ts","./src/app/core/services/reserva.service.ts"],"names":[],"mappings":"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","file":"components-reserva-reserva-module.js","sourcesContent":["export default \"<section class=\\\"content-header\\\">\\r\\n  <h1>{{ form.value.id ? 'Editar' : 'Cadastar' }} Reserva</h1>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n      <div class=\\\"box box-primary\\\">\\r\\n        <div class=\\\"box-header with-border\\\">\\r\\n          <h3 class=\\\"box-title\\\">Dados da Reserva</h3>\\r\\n        </div>\\r\\n        <div class=\\\"box-body\\\">\\r\\n          <form [formGroup]=\\\"form\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-lg-5 col-md-5 col-sm-5 col-xs-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"paciente\\\">Paciente</label>\\r\\n                  <ng-select id=\\\"paciente\\\" placeholder=\\\"Selecione\\\" formControlName=\\\"pacienteId\\\" [items]=\\\"pacientes\\\"\\r\\n                    bindLabel=\\\"nomeCompleto\\\" bindValue=\\\"id\\\">\\r\\n                    <ng-template ng-option-tmp let-item=\\\"item\\\">\\r\\n                      {{ item.nomeCompleto }}\\r\\n                      <br />\\r\\n                      <small>CPF: {{ item.cpf | cpf }}</small>\\r\\n                    </ng-template>\\r\\n                  </ng-select>\\r\\n                  <app-message-required [isInvalidForm]=\\\"isInvalidForm\\\" [controlComponent]=\\\"form.get('pacienteId')\\\">\\r\\n                  </app-message-required>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"observacao\\\">Observação</label>\\r\\n                  <textarea trim=\\\"blur\\\" style=\\\"resize: none\\\" id=\\\"observacao\\\" maxlength=\\\"1000\\\" type=\\\"text\\\" rows=\\\"8\\\"\\r\\n                    formControlName=\\\"observacao\\\" class=\\\"form-control\\\"></textarea>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n        <div class=\\\"box-footer\\\">\\r\\n          <button class=\\\"btn btn-primary pull-right\\\" style=\\\"margin-left: 15px;\\\" (click)=\\\"onClickFormSubmit()\\\"><em\\r\\n              class=\\\"fa fa-save\\\"></em>&nbsp;Salvar</button>\\r\\n          <button class=\\\"btn btn-danger pull-right\\\" (click)=\\\"onClickCancelar()\\\"><em\\r\\n              class=\\\"fa fa-ban\\\"></em>&nbsp;Cancelar</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\"","export default \"<section class=\\\"content-header\\\">\\r\\n  <h1>Buscar Reservas</h1>\\r\\n</section>\\r\\n<section class=\\\"content\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n      <div *ngIf=\\\"dados?.content?.length > 0\\\" class=\\\"box box-primary\\\">\\r\\n        <div class=\\\"box-header with-border\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\r\\n              <h3 class=\\\"box-title\\\">Resultado</h3>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"box-body\\\">\\r\\n          <div class=\\\"table-roll\\\">\\r\\n            <table id=\\\"example2\\\" class=\\\"table table-bordered table-hover\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>Opções</th>\\r\\n                  <th style=\\\"cursor: pointer\\\" (click)=\\\"onClickOrderBy('paciente.nomeCompleto')\\\"><em\\r\\n                      [class]=\\\"getIconOrderBy('paciente.nomeCompleto')\\\"></em>&nbsp;Paciente</th>\\r\\n                  <th style=\\\"cursor: pointer\\\" (click)=\\\"onClickOrderBy('observacao')\\\"><em\\r\\n                      [class]=\\\"getIconOrderBy('observacao')\\\"></em>&nbsp;Observação</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let reserva of dados.content\\\">\\r\\n                  <td>\\r\\n                    <button title=\\\"Editar\\\" [routerLink]=\\\"['/reserva/alterar', reserva.id]\\\" class=\\\"btn btn-primary\\\"><em\\r\\n                        class=\\\"fa fa-pencil\\\"></em></button>\\r\\n                    <button title=\\\"Excluir\\\" (click)=\\\"onClickExcluir(reserva.id)\\\" class=\\\"btn btn-danger btn-left\\\"><em\\r\\n                        class=\\\"fa fa-trash\\\"></em></button>\\r\\n                    <button title=\\\"Visualizar Paciente\\\" (click)=\\\"onClickOpenModalVisualizarPaciente(reserva.pacienteId)\\\"\\r\\n                      class=\\\"btn btn-primary btn-left\\\"><em class=\\\"fa fa-eye\\\"></em></button>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    {{ reserva.pacienteNomeCompleto }}\\r\\n                  </td>\\r\\n                  <td style=\\\" white-space: pre-wrap;\\\">\\r\\n                    {{ reserva?.observacao?.length > 40 ? (reserva?.observacao | slice: 0 : 40) + '...' : reserva.observacao || '-' }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n          <div class=\\\"box-footer\\\">\\r\\n            <app-page-action [dados]=\\\"dados\\\" [filtro]=\\\"filtro\\\" (searchByFilter)=\\\"searchByFilter()\\\">\\r\\n            </app-page-action>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <app-no-records *ngIf=\\\"showNoRecords && !dados.content?.length\\\"></app-no-records>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Paciente } from 'src/app/core/model/model/paciente.model';\r\nimport { Reserva } from 'src/app/core/model/model/reserva.model';\r\nimport { MessageService } from 'src/app/core/services/message.service';\r\nimport { PacienteService } from 'src/app/core/services/paciente.service';\r\nimport { ReservaService } from 'src/app/core/services/reserva.service';\r\nimport { Messages } from 'src/app/shared/messages/messages';\r\n\r\n@Component({\r\n  selector: 'app-reserva-form',\r\n  templateUrl: './reserva-form.component.html'\r\n})\r\nexport class ReservaFormComponent implements OnInit {\r\n\r\n  public pacientes = new Array<Paciente>();\r\n  public dados = new Array<Reserva>();\r\n  public form: FormGroup;\r\n  public isInvalidForm = false;\r\n\r\n  public constructor(\r\n    private formBuilder: FormBuilder,\r\n    private service: ReservaService,\r\n    private messageService: MessageService,\r\n    private pacienteService: PacienteService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  public ngOnInit(): void {\r\n    this.onCreateForm();\r\n    this.onLoadPacientes();\r\n    const id = +this.route.snapshot.params.id;\r\n    if (id) {\r\n      this.findById(id);\r\n    }\r\n  }\r\n\r\n  private async findById(id): Promise<void> {\r\n    this.messageService.clearAllMessages();\r\n    const response = await this.service.findById(id).toPromise();\r\n    this.form.setValue({\r\n      id: response.result.id,\r\n      pacienteId: response.result.pacienteId,\r\n      observacao: response.result.observacao\r\n    });\r\n    if (!this.pacientes.find(x => x.id === response.result.pacienteId)) {\r\n      this.pacientes.push(((await this.pacienteService.findById(response.result.pacienteId).toPromise()).result));\r\n      this.pacientes = [...this.pacientes];\r\n    }\r\n  }\r\n\r\n  private onCreateForm(): void {\r\n    this.form = this.formBuilder.group({\r\n      id: [null],\r\n      pacienteId: [null, Validators.required],\r\n      observacao: [null]\r\n    });\r\n  }\r\n\r\n  private onLoadPacientes(): void {\r\n    this.pacienteService.findAllWithoutBondWithReservation().subscribe(response => {\r\n      this.pacientes = response.result;\r\n    });\r\n  }\r\n\r\n  public onClickFormSubmit(): void {\r\n    this.messageService.clearAllMessages();\r\n    if (this.form.valid) {\r\n      const formValue: Reserva = {\r\n        ...this.form.value\r\n      };\r\n      if (formValue.id) {\r\n        this.service.update(formValue.id, formValue).subscribe(response => {\r\n          this.messageService.sendMessageSuccess(response.message);\r\n          this.router.navigate(['/reserva']);\r\n        });\r\n      } else {\r\n        this.service.create(formValue).subscribe(response => {\r\n          this.messageService.sendMessageSuccess(response.message);\r\n          this.router.navigate(['/reserva']);\r\n        });\r\n      }\r\n    } else {\r\n      this.isInvalidForm = true;\r\n      this.messageService.sendMessageError(Messages.MSG0004);\r\n    }\r\n  }\r\n\r\n  public onClickCancelar(): void {\r\n    this.messageService.clearAllMessages();\r\n    window.history.back();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalService } from 'ngx-bootstrap';\r\nimport Page from 'src/app/core/model/model/page.model';\r\nimport { Reserva } from 'src/app/core/model/model/reserva.model';\r\nimport { MessageService } from 'src/app/core/services/message.service';\r\nimport { PacienteService } from 'src/app/core/services/paciente.service';\r\nimport { ReservaService } from 'src/app/core/services/reserva.service';\r\nimport { Pagination } from 'src/app/shared/components/pagination/pagination';\r\nimport { ModalConfirmacaoComponent } from 'src/app/shared/modais/modal-confirmacao/modal-confirmacao.component';\r\nimport { ModalVisualizarPacienteUsuarioComponent } from 'src/app/shared/modais/modal-visualizar-paciente-usuario/modal-visualizar-paciente-usuario.component';\r\n\r\n@Component({\r\n  selector: 'app-reserva-list',\r\n  templateUrl: './reserva-list.component.html'\r\n})\r\nexport class ReservaListComponent extends Pagination<{}> implements OnInit {\r\n\r\n  public dados = new Page<Array<Reserva>>();\r\n  public showNoRecords = false;\r\n\r\n  constructor(\r\n    private pacienteService: PacienteService,\r\n    private service: ReservaService,\r\n    messageService: MessageService,\r\n    private modalService: BsModalService\r\n  ) {\r\n    super(messageService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initFilterValue();\r\n    this.searchByFilter();\r\n  }\r\n\r\n  private initFilterValue(): void {\r\n    this.filtro.orderBy = 'paciente.nomeCompleto';\r\n    this.filtro.direction = 'ASC';\r\n  }\r\n\r\n  public searchByFilter(): void {\r\n    this.service.findByFilter(this.filtro).subscribe(response => {\r\n      this.showNoRecords = true;\r\n      this.dados = response.result;\r\n    });\r\n  }\r\n\r\n  public onClickExcluir(id: number): void {\r\n    this.messageService.clearAllMessages();\r\n    const modalRef = this.modalService.show(ModalConfirmacaoComponent, { backdrop: 'static' });\r\n    modalRef.content.titulo = 'Confirmação de Exclusão';\r\n    modalRef.content.corpo = 'Deseja excluir esse registro?';\r\n    modalRef.content.onClose.subscribe((result: boolean) => {\r\n      if (result) {\r\n        this.service.delete(id).subscribe(response => {\r\n          this.messageService.sendMessageSuccess(response.message);\r\n          this.searchByFilter();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public async onClickOpenModalVisualizarPaciente(id: number): Promise<void> {\r\n    this.messageService.clearAllMessages();\r\n    const initialState = {\r\n      dados: (await this.pacienteService.findById(id).toPromise()).result\r\n    };\r\n    this.modalService.show(ModalVisualizarPacienteUsuarioComponent, { initialState, backdrop: 'static' });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ReservaFormComponent } from './form/reserva-form.component';\r\nimport { ReservaListComponent } from './list/reserva-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ReservaListComponent\r\n  },\r\n  {\r\n    path: 'incluir',\r\n    component: ReservaFormComponent\r\n  },\r\n  {\r\n    path: 'alterar/:id',\r\n    component: ReservaFormComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ReservaRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { SismsCommonsModule } from '../sisms-commons.module';\r\nimport { ReservaFormComponent } from './form/reserva-form.component';\r\nimport { ReservaRoutingModule } from './reserva-routing.module';\r\nimport { ReservaListComponent } from './list/reserva-list.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ReservaFormComponent,\r\n    ReservaListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReservaRoutingModule,\r\n    SismsCommonsModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class ReservaModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Reserva } from '../model/model/reserva.model';\r\nimport { BaseService } from './base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReservaService extends BaseService<Reserva, {}> {\r\n\r\n  public constructor(http: HttpClient) {\r\n    super(http, '/api/reserva');\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}